#!/usr/bin/python
__author__ = 'Shivam'
# This module of my penetration testing framework will help you with Reconnaissance phase
# Here you will scan your target host's ip and get the details of its open ports and services
#on them
import nmap
from socket import *
port_list = [20,21,22,80,443,119,25,110,111,119,143,23,70,8080]
def nscan():
    host = raw_input("Enter the Ip Adress of host: ")
    try:
        consock = socket(AF_INET, SOCK_STREAM)
        for ports in port_list:
            consock.connect(host,ports)
            result = consock.recv(1024)
            print '[+] %d TCP port open ' % ports
            print '[+]' + str(result)
            consock.close()
    except :
        print('[-] No basic ports open')
   #         pass


def nmapscan():
    host = raw_input("Enter the ip adress of Host : ")
    try :
        nmscan = nmap.PortScanner()
        nmscan.scan(host)
        result = nmscan[host]['tcp']
        for ports in result:
            print '[+] Port : ' + str(ports) + ' Staus : ' + nmscan[host]['tcp'][int(ports)]['state'] + ' Service: ' + nmscan[host]['tcp'][int(ports)]['name']
    except:
        print '[-] Error connecting to host make sure your host is up and network is connected'

def main():
    print '''**************************************************************
             Welcome to Scanning module of Python Vulnerability Assesment
                                            by Shivam Mehta
            **************************************************************'''

    print '''What Kind of Scan you want ?
             1.) Simple TCP Scanner [for basic scan]
             2.) Nmap Advanced Scanner [for advanced scan]         || Requires nmap in your system'''
    n = input("Enter your Choice: ")
    if n == 1 :
        nscan()
    elif n==2:
        nmapscan()
    else:
        print '[-] Invalid Input Found'


    more = raw_input('[?] Search for more Hosts ? (y/n) : ')
    if more == 'y':
        main()
    else:
        exit(0)




if __name__ == '__main__':
    main()
